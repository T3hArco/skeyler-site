// pooooop
// put color variables and stuff like that here

$contentPadding: 30px;
$mainWidth: 900px;

$borderGrey: #dfdfdf;
$borderGray: $borderGrey;

$subforumBg: #3b3b3b;
//#3d3d3e;

// $orange: #F7931D;
$orange: #67bd38;
;

$blue: #25bfff;
$graey: #aaa;

@function noiseToColor($color) {
  @if $color == BlackFooter {
    @return #1f1f1f;
  }
  @if $color == BlackNav {
    @return #0e0e0e;
  }
  @if $color == Black {
    @return #3b3b3b;
  }
  @if $color == BlackLight {
    @return #636363;
  }
  @if $color == Blue {
    @return #25bfff;
  }
  @if $color == BlueDark {
    @return #5b8ec8;
  }
  @if $color == Green {
    @return #a6d95d;
  }
  @if $color == Grey {
    @return #e9e9e9;
  }
  @if $color == GreyDark {
    @return #e0e0e0;
  }
  @if $color == GreyMedium {
    @return #f3f3f3;
  }
  @if $color == Beige {
    @return #f1e8b9;
  }
  @if $color == BeigeLight {
    @return #fff5c4;
  }
  @if $color == OffWhite {
    @return #f9f9f9;
  }
  @if $color == White {
    @return #fff;
  }
  @return null
}

@mixin noise($url, $repeat: repeat) {
//$urlTemp: str-slice($url, 1, 1);
//$urlTemp2: to-upper-case( #{$urlTemp} );
//$urlTemp3: str-slice($url, 2);
//test:$urlTemp2;
  background: url(../images/noise#{$url}.png) $repeat left center noiseToColor($url);
}

@mixin noiseBorder($url, $top: 0, $right: 0, $bottom: 2, $left: 0) {
  border-style: solid;
  border-color: noiseToColor($url);
  @include border-image(url(../images/noise#{$url}.png) $top $right $bottom $left repeat repeat);
  border-width: #{$top}px #{$right}px #{$bottom}px #{$left}px;
}

// animations
@mixin keyframes($name) {
  @-o-keyframes $name {
    @content
  }
;
  @-moz-keyframes $name {
    @content
  }
;
  @-webkit-keyframes $name {
    @content
  }
;
@-keyframes $name { @content };
}

@mixin animation-name($name...) {
  -o-animation-name: $name;
  -moz-animation-name: $name;
  -webkit-animation-name: $name;
  animation-name: $name;
}

@mixin animation-duration($duration...) {
  -o-animation-duration: $duration;
  -moz-animation-duration: $duration;
  -webkit-animation-duration: $duration;
  animation-duration: $duration;
}

@mixin animation-duration($duration...) {
  -o-animation-duration: $duration;
  -moz-animation-duration: $duration;
  -webkit-animation-duration: $duration;
  animation-duration: $duration;
}

@mixin animation-timing-function($timing...) {
  -o-animation-timing-function: $timing;
  -moz-animation-timing-function: $timing;
  -webkit-animation-timing-function: $timing;
  animation-timing-function: $timing;
}

@mixin animation-iteration-count($count...) {
  -o-animation-iteration-count: $count;
  -moz-animation-iteration-count: $count;
  -webkit-animation-iteration-count: $count;
  animation-iteration-count: $count;
}

@mixin animation-direction($direction...) {
  -o-animation-direction: $direction;
  -moz-animation-direction: $direction;
  -webkit-animation-direction: $direction;
  animation-direction: $direction;
}

@mixin animation-fill-mode($fill...) {
  -o-animation-fill-mode: $fill;
  -moz-animation-fill-mode: $fill;
  -webkit-animation-fill-mode: $fill;
  animation-fill-mode: $fill;
}

@mixin animation-play-state($state...) {
  -o-animation-play-state: $state;
  -moz-animation-play-state: $state;
  -webkit-animation-play-state: $state;
  animation-play-state: $state;
}

@mixin animation($animation...) {
  -o-animation: $animation;
  -moz-animation: $animation;
  -webkit-animation: $animation;
  animation: $animation;
}

//@include keyframes(grow) {
//  from {
//    -webkit-transform: scale(1);
//  }
//  to {
//    -webkit-transform: scale(2);
//  }
//}

